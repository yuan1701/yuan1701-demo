
0-1.v-model
    双向数据绑定，语法糖，负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。
0-2.v-on 可以监听多个方法吗？
    可以
1-1.什么是 MVVM？比之 MVC 有什么区别？
    MVVM 是 Model（模型 ）+ View（视图）+ ViewModel（视图模型）框架，通过 ViewModel 连接数据模型 Model 和 View。

    Vue 是数据驱动，通过数据来显示视图层而不是节点操作。
1-2.Vue 的优点？
    1、简单易用
    2、灵活渐进式
    3、轻量高效
    （3-1）、压索之后20KB大小
    （3-2） 、虚拟DOM
    4、MVVM
    （4-1）、数据驱动视图
    （4-2）、常规的操作方式都是DOM
    （4-3）、普通的javascript数据
    5、组件化
        组件化优点
        提高开发效率
        方便重复使用
        简化调试步骤
        提升整个项目的可维护性
        便于协同开发

1-3.渐进式框架?
    大概意思就是你可以只用我的一部分，而不是用了我这一点就必须用我的所有部分。
1-4.三大框架的对比？

    1. Vue 与 AngularJS 的区别
        相同点：
        都支持指令：内置指令和自定义指令；
        都支持过滤器：内置过滤器和自定义过滤器；
        都支持双向数据绑定；都不支持低端浏览器。

        不同点：
        AngularJS 的学习成本高，比如增加了 Dependency Injection 特性，而 Vue.js 本身提供的 API 都比较简单、直观；
        在性能上， AngularJS 依赖对数据做脏检查，所以 Watcher 越多越慢；
        Vue.js 使用基于依赖追踪的观察并且使用异步队列更新，所有的数据都是独立触发的。

2-1.引进组件的步骤？
    1. 采用 ES6 的 import ... from ...语法或 CommonJS 的 require() 方法引入组件；

    2. 对组件进行注册，代码如下：
    // 注册
    Vue.component("my-component", {
    template: "<div>A custom component!</div>"
    })

    3. 使用组件 <my-component></my-component> 。
 
3-1. Vue 生命周期的作用是什么？
    生命周期中有多个事件钩子，让我们在控制整个 Vue 实例的过程时更容易形成好的逻辑。
3-2. 什么是 Vue 生命周期？
    每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等
3-3. 第一次页面加载会触发哪几个钩子？
    
    第一次加载会触发 beforeCreate、created、beforeMount、mounted。
3-4. 简述每个周期具体适合哪些场景？
    beforecreate：可以在这加个 loading 事件，在加载实例时触发；
    created：初始化完成时的事件写在这里，如在这结束 loading 事件，异步请求也适宜在这里调用；
    mounted：挂载元素，获取到 DOM 节点；
    updated：如果对数据统一处理，在这里写上相应函数；
    beforeDestroy：可以做一个确认停止事件的确认框；
    nextTick：更新数据后立即操作 DOM。
3-5. created 和 mounted 的区别？

    created：在模板渲染成 HTML 前调用，即通常初始化某些属性值，然后再渲染成视图。

    mounted：在模板渲染成 HTML 后调用，通常是初始化页面完成后，再对 HTML 的 DOM 节点进行一些需要的操作。

3-6. Vue 获取数据在哪个周期函数？
    一般在 created（或 beforeRouter）里面就可以，如果涉及到需要页面加载完成之后的话就用 mounted。
3-7. $nextTick 的使用？



 




2.跨域？